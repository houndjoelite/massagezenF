// test-integration-final.js
const fetch = require('node-fetch');

// Contourner les probl√®mes SSL pour WordPress
process.env["NODE_TLS_REJECT_UNAUTHORIZED"] = "0";

const NEXT_API_URL = "http://localhost:3001/api/wordpress";

async function testFinalIntegration() {
  console.log("üîß Test de l'int√©gration finale");
  console.log("===============================");

  try {
    // Test 1: V√©rifier que le serveur Next.js fonctionne
    console.log("\n1Ô∏è‚É£ Test du serveur Next.js");
    console.log("----------------------------");
    
    try {
      const response = await fetch("http://localhost:3001/");
      if (response.ok) {
        console.log("‚úÖ Serveur Next.js accessible");
      } else {
        console.log(`‚ùå Serveur Next.js non accessible: ${response.status}`);
        return;
      }
    } catch (error) {
      console.log(`‚ùå Erreur de connexion au serveur Next.js: ${error.message}`);
      console.log("üí° Assurez-vous que le serveur Next.js est d√©marr√© avec 'npm run dev'");
      return;
    }

    // Test 2: V√©rifier l'API des cat√©gories
    console.log("\n2Ô∏è‚É£ Test de l'API des cat√©gories");
    console.log("--------------------------------");
    
    try {
      const response = await fetch(`${NEXT_API_URL}/categories`);
      if (response.ok) {
        const categories = await response.json();
        console.log(`‚úÖ ${categories.length} cat√©gories r√©cup√©r√©es`);
      } else {
        console.log(`‚ùå Erreur API cat√©gories: ${response.status}`);
      }
    } catch (error) {
      console.log(`‚ùå Erreur: ${error.message}`);
    }

    // Test 3: V√©rifier l'API des produits par cat√©gorie
    console.log("\n3Ô∏è‚É£ Test de l'API des produits par cat√©gorie");
    console.log("------------------------------------------");
    
    const testCategories = ['dos-nuque', 'pistolets-massage', 'pieds'];
    
    for (const categorySlug of testCategories) {
      console.log(`\n   Test de la cat√©gorie: ${categorySlug}`);
      
      try {
        const productResponse = await fetch(`${NEXT_API_URL}/products/category/${categorySlug}?limit=3`);
        if (productResponse.ok) {
          const products = await productResponse.json();
          console.log(`   ‚úÖ ${products.length} produits r√©cup√©r√©s`);
          
          if (products.length > 0) {
            const product = products[0];
            console.log(`   üì¶ Premier produit: ${product.title}`);
            console.log(`   üí∞ Prix: ${product.price}‚Ç¨`);
            console.log(`   üè∑Ô∏è Marque: ${product.brand || 'Non d√©finie'}`);
          }
        } else {
          console.log(`   ‚ö†Ô∏è Aucun produit trouv√© (${productResponse.status})`);
        }
      } catch (error) {
        console.log(`   ‚ùå Erreur: ${error.message}`);
      }
    }

    // Test 4: V√©rifier les pages de cat√©gories
    console.log("\n4Ô∏è‚É£ Test des pages de cat√©gories");
    console.log("--------------------------------");
    
    for (const categorySlug of testCategories) {
      console.log(`\n   Test de la page: /categories/${categorySlug}`);
      
      try {
        const pageResponse = await fetch(`http://localhost:3001/categories/${categorySlug}`);
        if (pageResponse.ok) {
          console.log(`   ‚úÖ Page accessible`);
        } else {
          console.log(`   ‚ùå Page non accessible: ${pageResponse.status}`);
        }
      } catch (error) {
        console.log(`   ‚ùå Erreur: ${error.message}`);
      }
    }

    // Test 5: R√©sum√© de l'int√©gration
    console.log("\n5Ô∏è‚É£ R√©sum√© de l'int√©gration");
    console.log("--------------------------");
    console.log("‚úÖ Configuration termin√©e :");
    console.log("   - Mapping des cat√©gories WooCommerce ‚Üî Next.js");
    console.log("   - APIs pour r√©cup√©rer les produits par cat√©gorie");
    console.log("   - Composant ProductGrid pour l'affichage");
    console.log("   - Pages de cat√©gories dynamiques");
    console.log("   - Gestion des erreurs et fallbacks");
    console.log("\nüìã Prochaines √©tapes :");
    console.log("   1. Cr√©er des produits dans WooCommerce");
    console.log("   2. Configurer les cat√©gories WooCommerce");
    console.log("   3. Ajouter des images aux produits");
    console.log("   4. Tester l'affichage sur le site");

  } catch (error) {
    console.error("‚ùå Erreur lors du test:", error);
  }
}

testFinalIntegration();






